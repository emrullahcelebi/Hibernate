<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-configuration PUBLIC

"-//Hibernate/Hibernate Configuration DTD 3.0//EN"

"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>

    <session-factory>

        <property name = "hibernate.connection.driver_class">org.postgresql.Driver</property>

        <property name="connection.url">jdbc:postgresql://localhost:5432/courses_db</property>

        <property name="connection.username">dev_user</property>

        <property name="connection.password">dev_password</property>

<!-- The SQL types not same for the all data bases, so that specific database will have specific dialect -->

        <property name = "hibernate.dialect">org.hibernate.dialect.PostgreSQL10Dialect</property>

<!-- ddl.auto creat ise uygulama her calistirildiginda yeniden olusturulur.
update ise schema silinmez degisiklik var ise guncellenir.
create-drope : schemanizi uygulama calistirildiginda olusturuluyor, sonlandiginda schema siliniyor
validate : schemayi validate yapiyor
 -->


        <property name="hbm2ddl.auto">update</property>

        <property name="show_sql">false</property>

        <property name="format_sql">true</property>
        
        <property name="hibernate.cache.use_second_level_cache">true</property>
        <property name="hibernate.cache.use_query_cache">true</property>
        <property name="hibernate.cache.region.factory_class">org.hibernate.cache.jcache.internal.JCacheRegionFactory</property>
		<property name="hibernate.javax.cache.provider">org.ehcache.jsr107.EhcacheCachingProvider</property>
        
        <!-- addAnnotatedClass(Student05.class).addAnnotatedClass(University.class) yapi yerine asagidaki config yapilabilir 
        <mapping class="com.hb05.manytoone.Student05"/>
         <mapping class="com.hb05.manytoone.University"/> -->
        
        

    </session-factory>

</hibernate-configuration>